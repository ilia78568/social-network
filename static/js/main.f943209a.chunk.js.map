{"version":3,"sources":["components/common/Paginator/Paginator.module.css","components/Users/users.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Navbar/Navbar.js","redux/dialogsReducer.js","components/Dialogs/DialogItem/DialogsItem.js","components/Dialogs/Message/Message.js","components/common/FormsControl/FormsControl.js","utils/validators/validators.js","components/Dialogs/Dialogs.js","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.js","api/api.js","redux/usersReducer.js","components/common/Paginator/Paginator.js","images/user.jpg","components/Users/User.js","components/Users/Users.js","images/Spinner-1s-200px.svg","components/common/Preloader/Preloader.js","redux/users-selectors.js","components/Users/UsersContainer.js","redux/profileReducer.js","components/Profile/MyPosts/Post/Post.js","components/Profile/MyPosts/MyPosts.js","components/Profile/MyPosts/MyPostContainer.js","components/Profile/ProfileInfo/ProfileStatusWithHooks.js","components/Profile/ProfileInfo/ProfileInfo.js","components/Profile/ProfileInfo/ProfileDataForm.js","components/Profile/Profile.js","components/Profile/ProfileContainer.js","components/Header/Header.js","redux/auth-reducer.js","components/Header/HeaderContainer.js","components/Login/Login.js","redux/appReducer.js","App.js","reportWebVitals.js","redux/redux-store.js","index.js","components/Navbar/Navbar.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Dialogs/Dialogs.module.css","components/common/FormsControl/FormControl.module.css","components/Header/Header.module.css"],"names":["module","exports","Navbar","className","classes","nav","item","to","activeClassName","activeLink","ADD_MESSAGE","initialState","dialogs","id","name","messages","message","dialogsReducer","state","action","type","body","newMessageText","DialogsItem","props","styles","dialog","Message","FormControl","input","meta","child","hasError","touched","error","formControl","children","Textarea","restProps","Input","required","value","maxLengthCreator","maxLength","length","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","placeholder","validate","Dialogs","dialogsPage","dialogsElements","map","elem","messagesElements","dialogsItems","values","addMessage","mapStateToPropsForRedirect","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","React","connect","compose","dispatch","addMessageActionCreator","instance","axios","withCredentials","baseURL","headers","usersAPI","currentPage","pageSize","get","then","res","data","userId","post","delete","console","warn","profileAPI","getProfile","getStatus","updateStatus","status","put","savePhoto","file","formData","FormData","append","saveProfile","profile","authAPI","email","password","rememberMe","captcha","securityAPI","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","users","totalUsersCount","isFetching","followingInProgress","portionSize","followSuccess","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleFollowingProgress","usersReducer","u","followed","count","filter","Paginator","pagesCount","Math","ceil","totalItemsCount","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftNum","rightNum","onClick","p","onPageChanged","selectedPage","User","user","src","photos","small","userPhoto","disabled","some","unfollow","follow","Users","Preloader","preloader","getUser","usersPage","getPageSize","getTotalUserCount","getCurrentPage","getIsFetching","getFollowingInProgress","getPortionSize","UsersContainer","pageNumber","requestUsers","a","resultCode","items","totalCount","ADD_POST","SET_USER_PROFILE","SET_STATUS","DELETE_POST","SAVE_PHOTO_SUCCESS","posts","likeCount","setStatus","setUserProfile","profileReducer","newPost","newPostText","postId","photo","Post","alt","MyPosts","obj","addPost","MyPostsContainer","profilePage","addPostActionCreator","ProfileStatusWithHooks","editMode","setEditMode","useEffect","onDoubleClick","onChange","e","currentTarget","autoFocus","onBlur","ProfileInfo","Object","keys","contacts","key","s","contact","descriptionBlock","img","isOwner","target","files","Profile","ProfileContainer","match","params","autorizedUserId","history","getUserProfile","refreshProfile","prevProps","getState","withRouter","Header","header","loginBlock","login","logout","SET_USER_DATA","GET_CAPTCHA_URL","captchaUrl","setAuthUserData","payload","getCaptchaUrlAC","getAuthUserData","getCaptchaUrl","url","authReducer","HeaderContainer","LoginReduxForm","formSummaryError","stopSubmit","_error","INITIALIZED_SUCCESS","initialized","appReducer","App","initializeApp","path","render","DialogsContainer","app","promise","Promise","all","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","redusers","combineReducers","formReducer","store","createStore","applyMiddleware","thunkMiddleware","window","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.f943209a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectedPage\":\"Paginator_selectedPage__2QiqV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"users_userPhoto__3QVHF\",\"selectedPage\":\"users_selectedPage__1ltKj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__fwoZG\"};","import React from 'react'\r\nimport classes from './Navbar.module.css'\r\nimport {NavLink} from 'react-router-dom'\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <nav className={classes.nav}>\r\n        <div className={`${classes.item}`}>\r\n          <NavLink to=\"/profile\" activeClassName={classes.activeLink}>Profile</NavLink>\r\n        </div>\r\n        <div className={classes.item}>\r\n          <NavLink to=\"/dialogs\" activeClassName={classes.activeLink}>Messages</NavLink>\r\n        </div>\r\n        <div className={classes.item}>\r\n          <NavLink to=\"/users\" activeClassName={classes.activeLink}>Users</NavLink>\r\n        </div>\r\n        {/* <div className={classes.item}><a >News</a></div>\r\n        <div className={classes.item}><a>Music</a></div>\r\n        <div className={classes.item}><a>Settings</a></div> */}\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default Navbar;\r\n","const ADD_MESSAGE = 'ADD-MESSAGE'\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {id: 1, name: 'Илья'},\r\n        {id: 2, name: 'Андрей'},\r\n        {id: 3, name: 'Влад'},\r\n      ],\r\n    messages: [\r\n        {id: 1, message: 'Hi all test test'},\r\n        {id: 2, message: 'Do u like me?'},\r\n        {id: 3, message: 'Bye bye'}\r\n      ],\r\n}\r\n\r\n const dialogsReducer = (state = initialState, action) => {\r\n    \r\n    switch(action.type) {\r\n        case ADD_MESSAGE:\r\n            let body = action.newMessageText;\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, {id: 4, message: body}]\r\n                }\r\n\r\n        \r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport default dialogsReducer\r\nexport const addMessageActionCreator = (newMessageText) => ({type: ADD_MESSAGE, newMessageText}) \r\n","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport styles from '../Dialogs.module.css'\r\n\r\n\r\nconst DialogsItem = (props) => {\r\n    return (\r\n        <NavLink to={'/dialogs/' + props.id} className={styles.dialog}>\r\n             {props.name}\r\n        </NavLink>\r\n    )\r\n}\r\n\r\nexport default DialogsItem","import React from 'react'\r\n\r\n\r\nconst Message = ({message}) => {\r\n    return (\r\n        <div className=\"message\">{message}</div>\r\n    )\r\n}\r\n\r\nexport default Message","import React from 'react'\r\n\r\nimport styles from './FormControl.module.css'\r\n\r\nconst FormControl = ({input, meta, child, ...props}) => {\r\n    const hasError = meta.touched && meta.error\r\n    return (\r\n        <div className={styles.formControl + ' ' + (hasError ? styles.error : '')}>\r\n            <div>\r\n               {props.children}\r\n            </div> \r\n            {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, child, ...restProps} = props\r\n    return (\r\n        <FormControl {...props}>\r\n            <textarea {...input} {...restProps}/>\r\n        </FormControl>\r\n    )\r\n}\r\nexport const Input = (props) => {\r\n    const {input, meta, child, ...restProps} = props\r\n    return (\r\n        <FormControl {...props}>\r\n            <input {...input} {...restProps}/>\r\n        </FormControl>\r\n    )\r\n}\r\n\r\n","export const required = value => {\r\n    if (value) return undefined\r\n    return 'Field is required'\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength ) return `Max length is ${maxLength} symbols`\r\n    return undefined\r\n}","import React from 'react'\r\nimport styles from './Dialogs.module.css'\r\nimport DialogsItem from './DialogItem/DialogsItem'\r\nimport Message from './Message/Message'\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport { Textarea } from '../common/FormsControl/FormsControl'\r\nimport { maxLengthCreator, required } from '../../utils/validators/validators'\r\n\r\nconst maxLength = maxLengthCreator(100)\r\nconst Dialogs = (props) => {\r\n    let state = props.dialogsPage;\r\n       \r\n    let dialogsElements = state.dialogs.map(elem => {\r\n        return <DialogsItem id={elem.id} key={elem.id} name={elem.name}/>\r\n    })\r\n    let messagesElements = state.messages.map(elem => {\r\n        return <Message message={elem.message} key={elem.id} id={elem.id}/>\r\n    })\r\n \r\n    let addNewMessage = (values) => {\r\n        props.addMessage(values.newMessageText)\r\n    }\r\n\r\n    return (\r\n        <div className={styles.dialogs}>\r\n           <div className={styles.dialogsItems}>\r\n              {dialogsElements}\r\n            </div>\r\n            <div className={styles.messages}>\r\n                {messagesElements}\r\n                \r\n                <AddMessageFormRedux onSubmit={addNewMessage}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst AddMessageForm =(props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field component={Textarea} name='newMessageText' placeholder=\"Enter message\" \r\n            validate={[required, maxLength]}></Field>\r\n            <button >Add message</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm({form: 'dialogAddMessageForm'})(AddMessageForm)\r\n\r\nexport default Dialogs","import React, { Component } from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\n\r\n\r\nlet mapStateToPropsForRedirect = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if(!this.props.isAuth ) {\r\n                return <Redirect to={'/login'}/>\r\n            }\r\n    \r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n   \r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n    return ConnectedAuthRedirectComponent\r\n}\r\n\r\n","import { addMessageActionCreator } from '../../redux/dialogsReducer'\r\nimport Dialogs from './Dialogs'\r\nimport {connect} from 'react-redux'\r\nimport {compose} from 'redux'\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect'\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addMessage: (newMessageText) => { dispatch(addMessageActionCreator(newMessageText))}\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs)","import * as axios from 'axios'\r\n\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        'API-KEY' : '3214a09a-b287-4d4d-9d6d-14a050c8456a'\r\n    }\r\n})\r\n\r\n\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage, pageSize) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n                .then(res => res.data)\r\n    },\r\n    follow(userId) {\r\n        return instance.post(`follow/${userId}`)\r\n    },\r\n    unfollow(userId) {\r\n       return instance.delete(`follow/${userId}`)\r\n    },\r\n    getProfile(userId) {\r\n        console.warn('Obsolet method, use profile object')\r\n        return profileAPI.getProfile(userId)\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return instance.get(`profile/` + userId)\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get('profile/status/' + userId)\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status`, {\r\n            status: status\r\n        })\r\n    },\r\n    savePhoto(file) {\r\n        let formData = new FormData();\r\n        formData.append('image', file)\r\n        return instance.put('profile/photo', formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n              }\r\n        })\r\n    },\r\n    saveProfile(profile) {\r\n        return instance.put(`profile`, profile)\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    me() { \r\n        return instance.get(`auth/me`)\r\n    },\r\n    login(email, password, rememberMe = false, captcha=null) {\r\n        return instance.post(`auth/login`, {email, password, rememberMe, captcha})\r\n    },\r\n    logout() {\r\n        return instance.delete('auth/login')\r\n    }\r\n}\r\n\r\n\r\nexport const securityAPI = {\r\n    getCaptchaUrl() { \r\n        return instance.get(`security/get-captcha-url`)\r\n    }\r\n}","import { usersAPI } from '../api/api'\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW'\r\nconst SET_USERS = 'SET-USERS'\r\nconst SET_CURRENT_PAGE = 'SET-CURRENT-PAGE'\r\nconst SET_TOTAL_USERS_COUNT = 'SET-TOTAL-USERS-COUNT'\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE-IS-FETCHING'\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE-IS-FOLLOWING-PROGRESS'\r\n\r\nlet initialState =   {\r\n    users: [],\r\n    pageSize: 5, \r\n    totalUsersCount: 0,\r\n    currentPage: 2, \r\n    isFetching: true,\r\n    followingInProgress: [],\r\n    portionSize: 10\r\n}\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case FOLLOW: \r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if(u.id === action.userId) {\r\n                        return {...u, followed: true}\r\n                    }\r\n                    return u\r\n                })\r\n            }\r\n\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if(u.id === action.userId) {\r\n                        return {...u, followed: false}\r\n                    }\r\n                    return u\r\n                })\r\n            }\r\n\r\n        case SET_USERS: {\r\n            return { ...state, users: action.users}\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return { ...state, currentPage: action.currentPage}\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return { ...state, totalUsersCount: action.count}\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {...state, \r\n                followingInProgress: action.isFetching ? \r\n                [...state.followingInProgress, action.userId] \r\n                : [state.followingInProgress.filter(id => id != action.userId)]\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const followSuccess = (userId) => ({type: FOLLOW, userId})\r\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId})\r\nexport const setUsers = (users) => ({type: SET_USERS, users})\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage})\r\nexport const setTotalUsersCount = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT, count: totalUsersCount})\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching})\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({type: TOGGLE_IS_FOLLOWING_PROGRESS, isFetching, userId})\r\n\r\n\r\nexport const requestUsers = (currentPage, pageSize) => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleIsFetching(true))\r\n        dispatch(setCurrentPage(currentPage))\r\n           let data = await usersAPI.getUsers( currentPage, pageSize)\r\n                dispatch(toggleIsFetching(false))\r\n                dispatch(setUsers(data.items))\r\n                dispatch(setTotalUsersCount(data.totalCount))\r\n    }\r\n} \r\n\r\nexport const follow = (userId) => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleFollowingProgress(true, userId))\r\n        let res = await usersAPI.follow(userId)\r\n        if(res.data.resultCode === 0) {\r\n            dispatch(followSuccess(userId))\r\n        }\r\n        dispatch(toggleFollowingProgress(false, userId))  \r\n    }\r\n} \r\nexport const unfollow = (userId) => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleFollowingProgress(true, userId))\r\n        let res = await usersAPI.unfollow(userId)\r\n        if(res.data.resultCode === 0) {\r\n            dispatch(unfollowSuccess(userId))\r\n        }\r\n        dispatch(toggleFollowingProgress(false, userId))  \r\n    }\r\n} \r\n\r\nexport default usersReducer","import React, { useState } from 'react'\r\nimport styles from './Paginator.module.css'\r\n\r\nlet Paginator = (props) => {\r\n\r\n    let pagesCount = Math.ceil(props.totalItemsCount / props.pageSize)\r\n    let pages = [];\r\n    \r\n    for(let i=1; i<= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount/ props.portionSize)\r\n    let [portionNumber,setPortionNumber]= useState(1)\r\n    let leftNum = (portionNumber - 1)* props.portionSize + 1\r\n    let rightNum = portionNumber* props.portionSize    \r\n    \r\n    return (    \r\n                <div>\r\n                    { portionNumber >1 &&\r\n                    <button onClick={() => setPortionNumber(portionNumber-1)}>Left</button>}\r\n                    {pages\r\n                    .filter(p => p >= leftNum && p<=rightNum)\r\n                    .map(p => {\r\n                        return <span onClick={() => { props.onPageChanged(p)}}\r\n                        className={props.currentPage === p  && styles.selectedPage}>{p}</span>\r\n                    })}\r\n                    {portionCount > portionNumber &&\r\n                    <button onClick={() => setPortionNumber(portionNumber+1)}>Next</button>}\r\n                   \r\n                </div>\r\n\r\n        )\r\n    }\r\n\r\nexport default Paginator","export default __webpack_public_path__ + \"static/media/user.ffd534f6.jpg\";","import React from 'react'\r\nimport styles from './users.module.css'\r\nimport userPhoto from '../../images/user.jpg'\r\nimport {NavLink} from 'react-router-dom'\r\n\r\nlet User = (props) => {\r\n    let elem = props.user;\r\n        return (    \r\n            <div>\r\n              \r\n                 <div key={elem.id}>\r\n                           <span>\r\n                               <div>\r\n                                   <NavLink to={'/profile/' + elem.id}>\r\n                                        <img src={elem.photos.small != null ? elem.photos.small : userPhoto} className={styles.userPhoto}/>\r\n                                   </NavLink>\r\n                               </div>\r\n                               <div>\r\n                                   {elem.followed \r\n                                   ? <button disabled={props.followingInProgress.some(id=> id === elem.id)} onClick={ () => {       \r\n                                       props.unfollow(elem.id)\r\n                                    } }>Unfollow</button> \r\n\r\n                                   : <button disabled={props.followingInProgress.some(id=> id === elem.id)} onClick={ () => {                       \r\n                                    \r\n                                       props.follow(elem.id)\r\n                                       \r\n                                       \r\n                                       \r\n                                       } }>Follow</button>}\r\n                                   \r\n                               </div>\r\n                           </span>\r\n                           <span>\r\n                               <span>\r\n                                    <div>{elem.name}</div>\r\n                                    <div>{elem.status}</div>\r\n                               </span>\r\n                               <span>\r\n                                    <div>{\"elem.location.city\"}</div>\r\n                                    <div>{\"elem.location.country\"}</div>\r\n                               </span>\r\n                           </span>\r\n                       </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\nexport default User","import React from 'react'\r\nimport Paginator from '../common/Paginator/Paginator'\r\nimport User from './User'\r\n\r\nlet Users = (props) => {\r\n        return (    \r\n            <div>\r\n               <Paginator currentPage={props.currentPage}\r\n                          onPageChanged={props.onPageChanged}\r\n                          totalItemsCount={props.totalUsersCount}\r\n                          pageSize={props.pageSize}\r\n                          portionSize={props.portionSize}\r\n                />\r\n                   {props.users.map(elem => {\r\n                       return <User key={elem.id} user={elem} followingInProgress ={props.followingInProgress}\r\n                       unfollow={props.unfollow} follow={props.follow}/>\r\n                   })\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n\r\nexport default Users","export default __webpack_public_path__ + \"static/media/Spinner-1s-200px.955a6519.svg\";","import preloader from '../../../images/Spinner-1s-200px.svg'\r\nimport React from 'react'\r\n\r\nlet Preloader = (props) => {\r\n    return (\r\n        <img src={preloader}/>\r\n    )\r\n}\r\n\r\nexport default Preloader","export const getUser = (state) => {\r\n    return state.usersPage.users\r\n}\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize\r\n}\r\n\r\nexport const getTotalUserCount = (state) => {\r\n    return state.usersPage.totalUsersCount\r\n}\r\n\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage\r\n}\r\n\r\nexport const getIsFetching = (state)=> {\r\n    return state.usersPage.isFetching\r\n}\r\n\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.usersPage.followingInProgress\r\n}\r\n\r\nexport const getPortionSize = (state) => {\r\n    return state.usersPage.portionSize\r\n}","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport {requestUsers,toggleFollowingProgress, follow, unfollow, setCurrentPage} from '../../redux/usersReducer'\r\nimport Users from './Users'\r\nimport Preloader from '../common/Preloader/Preloader'\r\nimport {withAuthRedirect} from '../../hoc/withAuthRedirect'\r\nimport {compose} from 'redux'\r\nimport { getCurrentPage, getFollowingInProgress, getIsFetching, getPageSize, getPortionSize, getTotalUserCount, getUser } from '../../redux/users-selectors'\r\n\r\nclass UsersContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        const {currentPage, pageSize} = this.props\r\n        this.props.requestUsers(currentPage, pageSize)\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        const {pageSize} = this.props\r\n        this.props.requestUsers(pageNumber, pageSize)\r\n    }\r\n\r\n    render() {\r\n\r\n        return ( <>\r\n        {this.props.isFetching ? <Preloader/>: null}\r\n        \r\n        <Users totalUsersCount={this.props.totalUsersCount}\r\n                        pageSize={this.props.pageSize}\r\n                        currentPage = {this.props.currentPage}\r\n                        onPageChanged ={this.onPageChanged}\r\n                        users = {this.props.users}\r\n                        follow = {this.props.follow}\r\n                        unfollow = {this.props.unfollow}\r\n                        followingInProgress = {this.props.followingInProgress}\r\n                        portionSize={this.props.portionSize}\r\n                        /> </>)\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUser(state),\r\n        pageSize : getPageSize(state),\r\n        totalUsersCount: getTotalUserCount(state),\r\n        currentPage: getCurrentPage(state), \r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state),\r\n        portionSize: getPortionSize(state)\r\n    }\r\n}\r\nexport default compose(\r\n    connect(mapStateToProps, {follow, unfollow, setCurrentPage, toggleFollowingProgress, requestUsers}),\r\n    // withAuthRedirect\r\n)\r\n(UsersContainer)","import {profileAPI, usersAPI} from '../api/api'\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET-USER-PROFILE'\r\nconst SET_STATUS = 'SET-STATUS'\r\nconst DELETE_POST = 'DELETE-POST'\r\nconst SAVE_PHOTO_SUCCESS = 'SAVE-PHOTO-SUCCES'\r\n\r\nlet initialState =   {\r\n    posts: [\r\n        {message: 'lallalaal', likeCount: 13, id: 0},\r\n        {message: 'it is my first post', likeCount: 0, id: 1},\r\n        {message: 'do u like anime', likeCount: 103, id: 2}\r\n    ],\r\n    profile: null,\r\n    status: ''\r\n}\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            let newPost = {\r\n                id: 5, \r\n                message: action.newPostText,\r\n                likeCount: 0\r\n            }\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n            }\r\n        case SET_USER_PROFILE: {\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n        } \r\n        case SET_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        }\r\n        case DELETE_POST: {\r\n            return {\r\n                ...state,\r\n                posts: state.posts.filter(p => p.id != action.postId)\r\n            }\r\n        }\r\n        case SAVE_PHOTO_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                profile: {...state.profile, photos: action.photo}\r\n            }\r\n        }\r\n       default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setStatus = (status) => ({type: SET_STATUS, status})\r\nexport const addPostActionCreator = (newPostText) => ({type:ADD_POST, newPostText})\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile})\r\nexport const deletePost = (postId) => ({type:DELETE_POST, postId})\r\nexport const savePhotoSuccess = (photo) => ({type:SAVE_PHOTO_SUCCESS, photo})\r\n\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n    let res = await usersAPI.getProfile(userId)\r\n    dispatch(setUserProfile(res.data))\r\n}\r\n\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n    let res = await profileAPI.getStatus(userId)\r\n    dispatch(setStatus(res.data))\r\n}\r\n\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    let res = await profileAPI.updateStatus(status)\r\n    if(res.data.resultCode === 0) {\r\n        dispatch(setStatus(status))\r\n    }\r\n}\r\n\r\nexport const savePhoto = (file) => async (dispatch) => {\r\n\r\n    let res = await profileAPI.savePhoto(file)\r\n    if(res.data.resultCode === 0) {\r\n        dispatch(savePhotoSuccess(res.data.data.photos))\r\n    }\r\n}\r\n\r\nexport const saveProfile = (profile) => async (dispatch, getState) => {\r\n    const userId = getState().auth.userId\r\n    let res = await profileAPI.saveProfile(profile)\r\n    \r\n    if(res.data.resultCode === 0) {\r\n        dispatch(setUserProfile(userId))\r\n    }\r\n    //  else {\r\n    //     dispatch(stopSubmit('login', {_error: res.data.messages[0]}))\r\n    // }\r\n}\r\n\r\nexport default profileReducer","import React from 'react'\r\nimport styles from './Post.module.css'\r\n\r\n\r\nconst Post = ({message, likeCount}) => {\r\n  return (\r\n    <div className={styles.item}>\r\n    <img alt=\"alt\"src=\"https://i.pinimg.com/originals/4d/af/2f/4daf2f183af331a8ba9a12bc2a458486.jpg\"></img>\r\n    {message}\r\n    <div>\r\n  <span>Like {likeCount}</span>\r\n    </div>\r\n  </div>\r\n  )\r\n}\r\n\r\nexport default Post;\r\n","import React from 'react'\r\nimport Post from './Post/Post'\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport { maxLengthCreator, required } from '../../../utils/validators/validators'\r\nimport { Textarea } from '../../common/FormsControl/FormsControl'\r\n\r\nconst maxLength = maxLengthCreator(30)\r\n\r\nconst MyPosts = (props) => {\r\n \r\n  let posts = props.posts.map(elem => <Post key={elem.message} message={elem.message} likeCount={elem.likeCount}/>)\r\n\r\n  let onAddPost = (obj) => {\r\n    props.addPost(obj.newPostText)\r\n    \r\n  }\r\n\r\n  return (\r\n    <div className=\"posts\">\r\n      My post\r\n      <div>\r\n        <AddMessageFormRedux onSubmit={onAddPost}/>\r\n      </div>\r\n      {posts}\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nconst AddPostComponent = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n       <Field component={Textarea} name='newPostText' placeholder='Add text' validate={[ required, maxLength]}/>\r\n       <button>Add post</button>\r\n    </form>\r\n  )\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm({form: 'profileAddPosts'})(AddPostComponent)\r\n\r\n\r\nexport default MyPosts;\r\n","import {addPostActionCreator} from '../../../redux/profileReducer'\r\nimport MyPosts from './MyPosts'\r\nimport {connect} from 'react-redux'\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.posts,\r\n  }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost: (newPostText) => {dispatch( addPostActionCreator(newPostText))},\r\n  }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\nexport default MyPostsContainer;\r\n","import React, { useEffect, useState } from 'react'\r\nimport s from './ProfileInfo.module.css'\r\n\r\nconst ProfileStatusWithHooks  = (props) => {\r\n   \r\n  let [editMode, setEditMode] = useState(false)\r\n  let [status, setStatus] = useState(props.status)\r\n  \r\n  useEffect(() => {\r\n    setStatus(props.status)\r\n  }, [props.status])\r\n\r\n  const activateEditMode =() => {\r\n   setEditMode(true)\r\n  }\r\n  \r\n  const deactivateEditMode = () => {\r\n    setEditMode(false)\r\n    props.updateStatus(status)\r\n  }\r\n\r\n  const onStatusChange = (e) => {\r\n    setStatus(e.currentTarget.value)\r\n  }\r\n\r\n  return (\r\n      <div>\r\n        {\r\n          !editMode &&\r\n          <div>\r\n              <span onDoubleClick={activateEditMode}>{props.status || 'no status'}</span>\r\n          </div>\r\n        }\r\n        {editMode && \r\n          <div>\r\n            <input \r\n            onChange={onStatusChange} \r\n             autoFocus\r\n              onBlur={deactivateEditMode}\r\n            value={status}/>\r\n          </div>\r\n        }\r\n      </div>\r\n\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;\r\n","import React, { useState } from 'react'\r\nimport Preloader from '../../common/Preloader/Preloader'\r\nimport s from './ProfileInfo.module.css'\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks'\r\nimport userPhoto from '../../../images/user.jpg'\r\nimport ProfileDataForm from './ProfileDataForm'\r\nimport ProfileDataFormRedux from './ProfileDataForm'\r\n\r\nconst ProfileInfo = (props) => {\r\n  \r\n  const [editMode, setEditMode] = useState(false) \r\n  \r\n  if(!props.profile) {\r\n    return <Preloader/>\r\n  }\r\n  \r\n  const onMainPhotoSelected = (e)=> {\r\n    if(e.target.files.length) {\r\n      props.savePhoto(e.target.files[0])\r\n      setEditMode(false)\r\n    }\r\n  }\r\n\r\n  const onSubmit = (formData) => {\r\n    props.saveProfile(formData)\r\n    setEditMode(false)\r\n    // console.log(formData)\r\n  }\r\n  return (\r\n    <div >\r\n      <div className={s.descriptionBlock}>\r\n\r\n      <img src={\r\n        props.profile.photos.small || userPhoto} className={s.img} />\r\n\r\n      {props.isOwner && <input type={'file'} onChange={onMainPhotoSelected}/>}\r\n\r\n      <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus}/>\r\n        {/* {editMode \r\n        ? <ProfileDataFormRedux initialValues={props.profile} onSubmit={onSubmit} profile={props.profile}/> \r\n        : <ProfileData profile={props.profile} isOwner={props.isOwner}  goToEditMode={() => setEditMode(true)}/>}\r\n         */}\r\n\r\n    </div>\r\n\r\n  </div>\r\n  )\r\n}\r\n\r\n\r\nconst ProfileData = (props) =>{\r\n  return (\r\n    <div>\r\n      {props.isOwner && <button onClick={props.goToEditMode}>Edit</button>}\r\n      <div>Fullname {props.profile.fullName}</div>\r\n\r\n      <div>\r\n        <b>loking for a job</b> {props.profile.lookingForAJob ? 'yes' : 'no'}\r\n      </div>\r\n      <div>\r\n        <b>about me </b> {props.profile.aboutMe}\r\n      </div>\r\n      <div>\r\n        <b>My professional skills</b> {props.profile.lookingForAJobDescription }\r\n      </div>\r\n      <div>\r\n        <b>contacts </b> {Object.keys(props.profile.contacts).map(key =>{\r\n          return <Contact key={key} contactValue={key} contactTitle={props.profile.contacts[key]}/>\r\n        })}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst Contact = (props) =>{\r\n  return (\r\n    <div>\r\n      <b>{props.contactValue}</b>:{props.contactTitle}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProfileInfo;\r\n","import React from 'react'\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport { Input, Textarea } from '../../common/FormsControl/FormsControl'\r\nimport s from './ProfileInfo.module.css'\r\n\r\n\r\nconst ProfileDataForm = (props) => {\r\n    return (\r\n        <form onSubmit={ props.handleSubmit}>\r\n         <button >save</button>\r\n        <div>Fullname</div>\r\n        <Field validate={[]} placeholder={'ful name'} name={'fullName'} component={Input}/>\r\n        <div>\r\n          <b>looking for a job</b> <Field name={'lookingForAJob'} component={Input} type={'checkbox'} />\r\n        </div>\r\n        <div>\r\n        <b>My professional skills</b> <Field name={'lookingForAJobDescription'} component={Textarea} placeholder={'My professional skills'} />\r\n        </div>\r\n        <div>\r\n          <b>About me</b> <Field name={'aboutMe'} component={Textarea} placeholder={'About me'} />\r\n        </div>\r\n        <div>\r\n          <b>contacts </b> {Object.keys(props.profile.contacts).map(key =>{\r\n            return <div className={s.contact} key={key}> \r\n              <b>{key} :</b> <Field validate={[]} placeholder={key} name={'contacts.' + key} component={Input}/>\r\n            </div>\r\n          })}\r\n        </div>\r\n      </form>\r\n    )\r\n  }\r\n\r\n  const ProfileDataFormRedux = reduxForm({\r\n    // a unique name for the form\r\n    form: 'edit-profile'\r\n  })(ProfileDataForm)\r\n\r\n  export default ProfileDataFormRedux","import React from 'react'\r\nimport MyPostsContainer from './MyPosts/MyPostContainer'\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo'\r\n\r\n\r\nconst Profile = (props) => {\r\n  \r\n  return (\r\n    <div >\r\n    <ProfileInfo profile={props.profile} \r\n    status={props.status}\r\n    updateStatus={props.updateStatus}\r\n    isOwner={props.isOwner}\r\n    savePhoto={props.savePhoto}\r\n    saveProfile={props.saveProfile}/>\r\n    <MyPostsContainer/>\r\n  </div>\r\n  )\r\n}\r\n\r\nexport default Profile;\r\n","import React from 'react'\r\nimport Profile from './Profile'\r\nimport { connect } from 'react-redux'\r\nimport {getUserProfile, getStatus, updateStatus, savePhoto, saveProfile} from '../../redux/profileReducer'\r\nimport {  withRouter } from 'react-router-dom'\r\nimport {compose} from 'redux'\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect'\r\n\r\nclass ProfileContainer extends React.Component {\r\n  \r\n\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId\r\n        if(!userId) {\r\n            userId = this.props.autorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push('/login') // for redirect to login\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId)\r\n        this.props.getStatus(userId)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile()\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.match.params.userId != prevProps.match.params.userId) {\r\n            this.refreshProfile()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        \r\n    return (\r\n        <div >\r\n            <Profile {...this.props} \r\n            isOwner={!this.props.match.params.userId}\r\n            profile={this.props.profile}\r\n            status={this.props.status}\r\n            updateStatus={this.props.updateStatus}\r\n            savePhoto={this.props.savePhoto}\r\n            saveProfile={this.props.saveProfile}/>\r\n      </div>\r\n      )\r\n  }\r\n    \r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    \r\n    return {\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        autorizedUserId: state.auth.userId,\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus, savePhoto, saveProfile}),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileContainer)","import React from 'react'\r\nimport styles from './Header.module.css'\r\nimport {NavLink} from 'react-router-dom'\r\n\r\nconst Header = (props) => {\r\n  return (\r\n    <header className={styles.header}>\r\n      <img src=\"https://i.pinimg.com/originals/33/b8/69/33b869f90619e81763dbf1fccc896d8d.jpg\"/>\r\n  \r\n      <div className={styles.loginBlock}>\r\n        {props.isAuth ? <div>{props.login}  <button onClick={props.logout}>Logout</button></div> \r\n        :  <NavLink to={'/login'}>Login</NavLink>}\r\n       \r\n\r\n      </div>\r\n  </header>\r\n  )\r\n}\r\n\r\nexport default Header;\r\n","import {authAPI, securityAPI} from '../api/api'\r\nimport {stopSubmit} from 'redux-form'\r\n\r\nconst SET_USER_DATA = 'samurai-network/auth/SET-USER-DATA';\r\nconst GET_CAPTCHA_URL = 'samurai-network/auth/GET-CAPTCHA-URL';\r\n\r\n\r\nlet initialState =   {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n    captchaUrl: null\r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case SET_USER_DATA: \r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            }\r\n        case GET_CAPTCHA_URL: \r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({type: SET_USER_DATA, payload: {userId, email, login, isAuth}})\r\nexport const getCaptchaUrlAC = (captchaUrl) => ({type: GET_CAPTCHA_URL, payload: captchaUrl})\r\n\r\n\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n    const res = await authAPI.me()\r\n    \r\n    if(res.data.resultCode === 0) {\r\n        let {id, login, email} = res.data.data\r\n        dispatch(setAuthUserData(id, email, login, true))\r\n    }\r\n}\r\n\r\nexport const login = (email, password, rememberMe, captcha) => async (dispatch) => {\r\n    \r\n    let res = await authAPI.login(email,password,rememberMe, captcha)\r\n       \r\n        if(res.data.resultCode === 0) {\r\n            dispatch(getAuthUserData())\r\n        }\r\n        else {\r\n            if(res.data.resultCode === 10) {\r\n                dispatch(getCaptchaUrl())\r\n            }\r\n            let message = res.data.messages.length > 0 ? res.data.messages[0] : 'Some error'\r\n            dispatch(stopSubmit('login', {_error: message}))\r\n        }\r\n}\r\n\r\nexport const getCaptchaUrl = () => async (dispatch) => {\r\n    let res = await securityAPI.getCaptchaUrl()\r\n    const captchaUrl = res.data.url\r\n            \r\n    dispatch(getCaptchaUrlAC(captchaUrl))\r\n}\r\n\r\nexport const logout = () => async (dispatch) => {\r\n    \r\n    let res = await authAPI.logout()\r\n        if(res.data.resultCode === 0) {\r\n            dispatch(setAuthUserData(null, null, null, false))\r\n        }\r\n}\r\n\r\nexport default authReducer","import React from 'react'\r\nimport Header from './Header';\r\nimport {connect} from 'react-redux'\r\nimport {logout} from '../../redux/auth-reducer'\r\n\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n      <Header {...this.props}/>\r\n    )\r\n  }\r\n  \r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, {logout})(HeaderContainer);\r\n","import React from 'react'\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport { required } from '../../utils/validators/validators'\r\nimport { Input } from '../common/FormsControl/FormsControl'\r\nimport {connect} from 'react-redux'\r\nimport {login} from '../../redux/auth-reducer'\r\nimport { Redirect } from 'react-router-dom'\r\nimport styles from '../common/FormsControl/FormControl.module.css'\r\n\r\n\r\nconst LoginForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n                <div>\r\n                    <Field \r\n                    validate={[required]}\r\n                    placeholder={'email'} name={'email'} component={Input}/>\r\n                </div>\r\n                <div>\r\n                    <Field \r\n                    validate={[required]}\r\n                    placeholder={'Password'} name={'password'} component={Input} type={'password'}/>\r\n                </div>\r\n                <div>\r\n                    <Field \r\n                    validate={[]}\r\n                    component={Input} name={'rememberMe'} type={'checkbox'}/> remember me\r\n                </div>\r\n                {props.captchaUrl && <img src={props.captchaUrl}/>}\r\n                {props.captchaUrl && <Field \r\n                    validate={[required]}\r\n                    placeholder={'symbols'} name={'captcha'} component={Input}/>}\r\n\r\n                {props.error && <div className={styles.formSummaryError}>\r\n                    {props.error}\r\n                </div>}\r\n                <div>\r\n                    <button>Login</button>\r\n                </div>\r\n            </form>\r\n    )\r\n}\r\nconst LoginReduxForm = reduxForm({\r\n    // a unique name for the form\r\n    form: 'login'\r\n  })(LoginForm)\r\n  \r\nconst Login = (props) => {\r\n\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe, formData.captcha)\r\n    }\r\n\r\n    if(props.isAuth) {\r\n        return <Redirect to={'/profile'}/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Login</h1>\r\n            <LoginReduxForm captchaUrl={props.captchaUrl} onSubmit={onSubmit}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mstp = (state) => (\r\n    {\r\n        isAuth: state.auth.isAuth,\r\n        captchaUrl: state.auth.captchaUrl\r\n    }\r\n)\r\n\r\nexport default connect(mstp, {login})(Login)\r\n","import { getAuthUserData } from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED-SUCCES';\r\n\r\nlet initialState =   {\r\n    initialized: false,\r\n}\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS: \r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS})\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n        let promise = dispatch(getAuthUserData())\r\n\r\n        Promise.all([promise])\r\n            .then(() => {\r\n                dispatch(initializedSuccess())\r\n            })\r\n\r\n       \r\n}\r\n\r\n\r\nexport default appReducer","import './App.css';\r\nimport React from 'react'\r\nimport Navbar from './components/Navbar/Navbar';\r\nimport {BrowserRouter, Route, withRouter} from 'react-router-dom'\r\nimport DialogsContainer from './components/Dialogs/DialogsContainer';\r\nimport {connect} from 'react-redux'\r\nimport UsersContainer from './components/Users/UsersContainer';\r\nimport ProfileContainer from './components/Profile/ProfileContainer';\r\nimport HeaderContainer from './components/Header/HeaderContainer';\r\nimport Login from './components/Login/Login';\r\nimport { compose } from 'redux';\r\nimport {initializeApp} from './redux/appReducer'\r\nimport Preloader from './components/common/Preloader/Preloader';\r\nclass App extends React.Component {\r\n\r\n  componentDidMount() {\r\n    this.props.initializeApp()\r\n  }\r\n  \r\n  render() {\r\n    if(!this.props.initialized) {\r\n      return <Preloader/>\r\n    }\r\n\r\n        return (\r\n        <BrowserRouter>\r\n          <div className=\"app-wrapper\">\r\n            <HeaderContainer/>\r\n            <Navbar/>\r\n            <div className=\"app-wrapper-content\">\r\n\r\n              <Route path=\"/profile/:userId?\" render={ () => \r\n                <ProfileContainer  />}/>\r\n\r\n              <Route path=\"/dialogs\" render={() => \r\n                <DialogsContainer />}/>\r\n              <Route path=\"/users\" render={() => \r\n              <UsersContainer/> }/>\r\n                <Route path=\"/login\" render={() => \r\n              <Login/> }/>\r\n            </div>\r\n          </div>\r\n        </BrowserRouter>\r\n        \r\n      );\r\n  }\r\n}\r\n\r\nconst mstp = (state) => {\r\n  return {\r\n    initialized: state.app.initialized\r\n  }\r\n}\r\nexport default compose(\r\n  withRouter,\r\n  connect(mstp, {initializeApp})\r\n)(App)\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {applyMiddleware, combineReducers, createStore} from 'redux'\r\nimport profileReducer from './profileReducer'\r\nimport dialogsReducer from './dialogsReducer'\r\nimport usersReducer from './usersReducer';\r\nimport authReducer from './auth-reducer';\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport { reducer as formReducer } from 'redux-form'\r\nimport appReducer from './appReducer';\r\n\r\nlet redusers = combineReducers({\r\n    profilePage : profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer, \r\n    app: appReducer\r\n});\r\n\r\nlet store = createStore(redusers, applyMiddleware(thunkMiddleware))\r\n\r\nwindow.store = store;\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App'\r\n\r\nimport reportWebVitals from './reportWebVitals';\r\nimport store from './redux/redux-store'\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\n\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n);  \r\n\r\n\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__z83CQ\",\"item\":\"Navbar_item__3r0_X\",\"activeLink\":\"Navbar_activeLink__1-gDR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__v6wWO\",\"img\":\"ProfileInfo_img__HML0V\",\"contact\":\"ProfileInfo_contact__3JiSH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__205EG\",\"dialog\":\"Dialogs_dialog__20iLC\",\"dialogsItems\":\"Dialogs_dialogsItems__21a3X\",\"messages\":\"Dialogs_messages__3KQDe\",\"message\":\"Dialogs_message__i8CV9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControl_formControl__3WRSk\",\"error\":\"FormControl_error__1RoOs\",\"formSummaryError\":\"FormControl_formSummaryError__7SBxp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1HaWi\",\"loginBlock\":\"Header_loginBlock__fuadq\"};"],"sourceRoot":""}